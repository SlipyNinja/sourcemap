{"contracts": {"Forwarder.sol": {"CloneFactory": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"Forwarder.sol\":1325:3897  contract CloneFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Forwarder.sol\":1325:3897  contract CloneFactory {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d478f6e2d9f8aba2cf639c641240b4d45bcfab13d6dc4b7bcdfe52c3c73972d464736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d478f6e2d9f8aba2cf639c641240b4d45bcfab13d6dc4b7bcdfe52c3c73972d464736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH25 0xF6E2D9F8ABA2CF639C641240B4D45BCFAB13D6DC4B7BCDFE52 0xC3 0xC7 CODECOPY PUSH19 0xD464736F6C6343000705003300000000000000 ", "sourceMap": "1325:2572:0:-:0;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600080fdfea2646970667358221220d478f6e2d9f8aba2cf639c641240b4d45bcfab13d6dc4b7bcdfe52c3c73972d464736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH25 0xF6E2D9F8ABA2CF639C641240B4D45BCFAB13D6DC4B7BCDFE52 0xC3 0xC7 CODECOPY PUSH19 0xD464736F6C6343000705003300000000000000 ", "sourceMap": "1325:2572:0:-:0;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Forwarder.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Forwarder.sol\":{\"keccak256\":\"0x76f2e131bc4053ac053cc06b44a6ce24466f21a6ce2bbf5b18389bb0b52c6404\",\"urls\":[\"bzz-raw://e04f77928f5910dd55882ceb680cb8a262ef26e02c159163f7e561930f735a71\",\"dweb:/ipfs/QmcZcinCq9Xs8e9GBzRYaQwTV161tXk4DGuDDomLAs9rLj\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "ERC20Interface": {"abi": [{"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "balance", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_to", "type": "address"}, {"internalType": "uint256", "name": "_value", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "success", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract that exposes the needed erc20 token functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Forwarder.sol\":\"ERC20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Forwarder.sol\":{\"keccak256\":\"0x76f2e131bc4053ac053cc06b44a6ce24466f21a6ce2bbf5b18389bb0b52c6404\",\"urls\":[\"bzz-raw://e04f77928f5910dd55882ceb680cb8a262ef26e02c159163f7e561930f735a71\",\"dweb:/ipfs/QmcZcinCq9Xs8e9GBzRYaQwTV161tXk4DGuDDomLAs9rLj\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "notice": "Contract that exposes the needed erc20 token functions", "version": 1}}, "Forwarder": {"abi": [{"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "from", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}, {"indexed": false, "internalType": "bytes", "name": "data", "type": "bytes"}], "name": "ForwarderDeposited", "type": "event"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "flush", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "tokenContractAddress", "type": "address"}], "name": "flushTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_parentAddress", "type": "address"}], "name": "init", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "parentAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"flushTokens(address)": {"params": {"tokenContractAddress": "the address of the erc20 token contract"}}}, "version": 1}, "evm": {"assembly": "    /* \"Forwarder.sol\":6149:8763  contract Forwarder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Forwarder.sol\":6149:8763  contract Forwarder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x821de3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19ab453c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ef13367\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6b9f96ea\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Forwarder.sol\":7763:7770  flush() */\n      tag_9\n        /* \"Forwarder.sol\":7763:7768  flush */\n      tag_10\n        /* \"Forwarder.sol\":7763:7770  flush() */\n      jump\t// in\n    tag_9:\n        /* \"Forwarder.sol\":6149:8763  contract Forwarder {... */\n      stop\n    tag_2:\n        /* \"Forwarder.sol\":7591:7598  flush() */\n      tag_9\n        /* \"Forwarder.sol\":7591:7596  flush */\n      tag_10\n        /* \"Forwarder.sol\":7591:7598  flush() */\n      jump\t// in\n        /* \"Forwarder.sol\":6244:6272  address public parentAddress */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Forwarder.sol\":6444:7028  function init(address _parentAddress) external onlyUninitialized {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"Forwarder.sol\":7961:8386  function flushTokens(address tokenContractAddress) external onlyParent {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n        /* \"Forwarder.sol\":8471:8761  function flush() public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_9\n    tag_10:\n        /* \"Forwarder.sol\":8517:8538  address(this).balance */\n      selfbalance\n        /* \"Forwarder.sol\":8549:8559  value == 0 */\n      dup1\n        /* \"Forwarder.sol\":8545:8582  if (value == 0) {... */\n      tag_28\n      jumpi\n        /* \"Forwarder.sol\":8569:8576  return; */\n      pop\n      jump(tag_27)\n        /* \"Forwarder.sol\":8545:8582  if (value == 0) {... */\n    tag_28:\n        /* \"Forwarder.sol\":8589:8601  bool success */\n      0x00\n        /* \"Forwarder.sol\":8607:8620  parentAddress */\n      dup1\n      sload\n        /* \"Forwarder.sol\":8607:8660  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      0x40\n      dup1\n      mload\n      shl(0x8a, 0x0b8bd19bdc9dd85c99195c8b9cdbdb)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":8607:8620  parentAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Forwarder.sol\":8634:8639  value */\n      dup5\n      swap2\n        /* \"Forwarder.sol\":8607:8660  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      0x0f\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Forwarder.sol\":8589:8601  bool success */\n      dup7\n      swap3\n        /* \"Forwarder.sol\":8607:8660  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Forwarder.sol\":8634:8639  value */\n      dup6\n        /* \"Forwarder.sol\":8607:8620  parentAddress */\n      dup8\n        /* \"Forwarder.sol\":8607:8660  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"Forwarder.sol\":8588:8660  (bool success, ) = parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      pop\n      swap1\n      pop\n        /* \"Forwarder.sol\":8674:8681  success */\n      dup1\n        /* \"Forwarder.sol\":8666:8698  require(success, 'Flush failed') */\n      tag_32\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x119b1d5cda0819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_32:\n        /* \"Forwarder.sol\":8709:8756  ForwarderDeposited(msg.sender, value, msg.data) */\n      0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b\n        /* \"Forwarder.sol\":8728:8738  msg.sender */\n      caller\n        /* \"Forwarder.sol\":8740:8745  value */\n      dup4\n        /* \"Forwarder.sol\":8747:8755  msg.data */\n      0x00\n      calldatasize\n        /* \"Forwarder.sol\":8709:8756  ForwarderDeposited(msg.sender, value, msg.data) */\n      mload(0x40)\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"Forwarder.sol\":8471:8761  function flush() public {... */\n      pop\n      pop\n    tag_27:\n      jump\t// out\n        /* \"Forwarder.sol\":6244:6272  address public parentAddress */\n    tag_16:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"Forwarder.sol\":6444:7028  function init(address _parentAddress) external onlyUninitialized {... */\n    tag_20:\n        /* \"Forwarder.sol\":7410:7413  0x0 */\n      0x00\n        /* \"Forwarder.sol\":7385:7398  parentAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Forwarder.sol\":7385:7414  parentAddress == address(0x0) */\n      iszero\n        /* \"Forwarder.sol\":7377:7438  require(parentAddress == address(0x0), 'Already initialized') */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x105b1c9958591e481a5b9a5d1a585b1a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n        /* \"Forwarder.sol\":6515:6528  parentAddress */\n      0x00\n        /* \"Forwarder.sol\":6515:6545  parentAddress = _parentAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"Forwarder.sol\":6567:6588  address(this).balance */\n      selfbalance\n      dup1\n        /* \"Forwarder.sol\":6595:6632  if (value == 0) {... */\n      tag_36\n      jumpi\n        /* \"Forwarder.sol\":6619:6626  return; */\n      pop\n      jump(tag_35)\n        /* \"Forwarder.sol\":6595:6632  if (value == 0) {... */\n    tag_36:\n        /* \"Forwarder.sol\":6639:6651  bool success */\n      0x00\n        /* \"Forwarder.sol\":6657:6670  parentAddress */\n      dup1\n      sload\n        /* \"Forwarder.sol\":6657:6710  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      0x40\n      dup1\n      mload\n      shl(0x8a, 0x0b8bd19bdc9dd85c99195c8b9cdbdb)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":6657:6670  parentAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Forwarder.sol\":6684:6689  value */\n      dup5\n      swap2\n        /* \"Forwarder.sol\":6657:6710  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      0x0f\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Forwarder.sol\":6639:6651  bool success */\n      dup7\n      swap3\n        /* \"Forwarder.sol\":6657:6710  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Forwarder.sol\":6684:6689  value */\n      dup6\n        /* \"Forwarder.sol\":6657:6670  parentAddress */\n      dup8\n        /* \"Forwarder.sol\":6657:6710  parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_39\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_38)\n    tag_39:\n      0x60\n      swap2\n      pop\n    tag_38:\n      pop\n        /* \"Forwarder.sol\":6638:6710  (bool success, ) = parentAddress.call{ value: value }(\"./Forwarder.sol\") */\n      pop\n      swap1\n      pop\n        /* \"Forwarder.sol\":6724:6731  success */\n      dup1\n        /* \"Forwarder.sol\":6716:6748  require(success, 'Flush failed') */\n      tag_40\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x119b1d5cda0819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_40:\n        /* \"Forwarder.sol\":6973:7023  ForwarderDeposited(address(this), value, msg.data) */\n      0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b\n        /* \"Forwarder.sol\":7000:7004  this */\n      address\n        /* \"Forwarder.sol\":7007:7012  value */\n      dup4\n        /* \"Forwarder.sol\":7014:7022  msg.data */\n      0x00\n      calldatasize\n        /* \"Forwarder.sol\":6973:7023  ForwarderDeposited(address(this), value, msg.data) */\n      mload(0x40)\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"Forwarder.sol\":7444:7445  _ */\n      pop\n      pop\n    tag_35:\n        /* \"Forwarder.sol\":6444:7028  function init(address _parentAddress) external onlyUninitialized {... */\n      pop\n      jump\t// out\n        /* \"Forwarder.sol\":7961:8386  function flushTokens(address tokenContractAddress) external onlyParent {... */\n    tag_24:\n        /* \"Forwarder.sol\":7185:7198  parentAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"Forwarder.sol\":7171:7181  msg.sender */\n      caller\n        /* \"Forwarder.sol\":7171:7198  msg.sender == parentAddress */\n      eq\n        /* \"Forwarder.sol\":7163:7214  require(msg.sender == parentAddress, 'Only Parent') */\n      tag_42\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x13db9b1e4814185c995b9d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_42:\n        /* \"Forwarder.sol\":8179:8215  instance.balanceOf(forwarderAddress) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Forwarder.sol\":8141:8145  this */\n      address\n        /* \"Forwarder.sol\":8179:8215  instance.balanceOf(forwarderAddress) */\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      mload\n        /* \"Forwarder.sol\":8079:8099  tokenContractAddress */\n      dup4\n      swap3\n        /* \"Forwarder.sol\":8141:8145  this */\n      swap2\n        /* \"Forwarder.sol\":8038:8061  ERC20Interface instance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":8179:8197  instance.balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Forwarder.sol\":8179:8215  instance.balanceOf(forwarderAddress) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Forwarder.sol\":8179:8197  instance.balanceOf */\n      dup7\n        /* \"Forwarder.sol\":8179:8215  instance.balanceOf(forwarderAddress) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      mload\n      swap1\n      pop\n        /* \"Forwarder.sol\":8225:8246  forwarderBalance == 0 */\n      dup1\n        /* \"Forwarder.sol\":8221:8269  if (forwarderBalance == 0) {... */\n      tag_48\n      jumpi\n        /* \"Forwarder.sol\":8256:8263  return; */\n      pop\n      pop\n      pop\n      jump(tag_35)\n        /* \"Forwarder.sol\":8221:8269  if (forwarderBalance == 0) {... */\n    tag_48:\n        /* \"Forwarder.sol\":8338:8351  parentAddress */\n      sload(0x00)\n        /* \"Forwarder.sol\":8275:8381  TransferHelper.safeTransfer(... */\n      tag_49\n      swap1\n        /* \"Forwarder.sol\":8310:8330  tokenContractAddress */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":8338:8351  parentAddress */\n      and\n        /* \"Forwarder.sol\":8359:8375  forwarderBalance */\n      dup4\n        /* \"Forwarder.sol\":8275:8302  TransferHelper.safeTransfer */\n      tag_50\n        /* \"Forwarder.sol\":8275:8381  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_49:\n        /* \"Forwarder.sol\":7220:7221  _ */\n      pop\n      pop\n      pop\n        /* \"Forwarder.sol\":7961:8386  function flushTokens(address tokenContractAddress) external onlyParent {... */\n      pop\n      jump\t// out\n        /* \"Forwarder.sol\":4903:5341  function safeTransfer(... */\n    tag_50:\n        /* \"Forwarder.sol\":5129:5174  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap3\n      add\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      dup2\n      mstore\n        /* \"Forwarder.sol\":5118:5175  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap3\n      mload\n      dup3\n      mload\n        /* \"Forwarder.sol\":5083:5095  bool success */\n      0x00\n      swap5\n        /* \"Forwarder.sol\":5097:5114  bytes memory data */\n      0x60\n      swap5\n        /* \"Forwarder.sol\":5118:5128  token.call */\n      swap4\n      dup10\n      and\n      swap4\n        /* \"Forwarder.sol\":5129:5174  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap3\n        /* \"Forwarder.sol\":5118:5175  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      dup3\n      swap2\n        /* \"Forwarder.sol\":5129:5174  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"Forwarder.sol\":5118:5175  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      dup1\n      dup4\n        /* \"Forwarder.sol\":5129:5174  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n        /* \"Forwarder.sol\":5118:5175  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n    tag_52:\n      0x20\n      dup4\n      lt\n      tag_54\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_52)\n    tag_54:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_57\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_56)\n    tag_57:\n      0x60\n      swap2\n      pop\n    tag_56:\n      pop\n        /* \"Forwarder.sol\":5082:5175  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Forwarder.sol\":5206:5213  success */\n      dup2\n        /* \"Forwarder.sol\":5206:5263  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"Forwarder.sol\":5218:5229  data.length */\n      dup1\n      mload\n        /* \"Forwarder.sol\":5218:5234  data.length == 0 */\n      iszero\n      dup1\n        /* \"Forwarder.sol\":5218:5262  data.length == 0 || abi.decode(data, (bool)) */\n      tag_59\n      jumpi\n      pop\n        /* \"Forwarder.sol\":5249:5253  data */\n      dup1\n        /* \"Forwarder.sol\":5238:5262  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      mload\n        /* \"Forwarder.sol\":5218:5262  data.length == 0 || abi.decode(data, (bool)) */\n    tag_59:\n        /* \"Forwarder.sol\":5185:5334  require(... */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"Forwarder.sol\":4903:5341  function safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611 5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564\n\n    auxdata: 0xa26469706673582212208b2a843d8fd38e3f90d45c6067cd85312e05991a000fd683f2906bbfd12908c664736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b506106b7806100206000396000f3fe6080604052600436106100425760003560e01c8062821de31461005957806319ab453c1461008a5780633ef13367146100bd5780636b9f96ea146100f057610051565b366100515761004f610101565b005b61004f610101565b34801561006557600080fd5b5061006e610247565b604080516001600160a01b039092168252519081900360200190f35b34801561009657600080fd5b5061004f600480360360208110156100ad57600080fd5b50356001600160a01b0316610256565b3480156100c957600080fd5b5061004f600480360360208110156100e057600080fd5b50356001600160a01b031661040c565b3480156100fc57600080fd5b5061004f5b478061010d5750610245565b60008054604080516e0b8bd19bdc9dd85c99195c8b9cdbdb608a1b815290516001600160a01b03909216918491600f808201928692909190829003018185875af1925050503d806000811461017e576040519150601f19603f3d011682016040523d82523d6000602084013e610183565b606091505b50509050806101c8576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b338360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b565b6000546001600160a01b031681565b6000546001600160a01b0316156102aa576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03831617905547806102d15750610409565b60008054604080516e0b8bd19bdc9dd85c99195c8b9cdbdb608a1b815290516001600160a01b03909216918491600f808201928692909190829003018185875af1925050503d8060008114610342576040519150601f19603f3d011682016040523d82523d6000602084013e610347565b606091505b505090508061038c576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b308360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b50565b6000546001600160a01b03163314610459576040805162461bcd60e51b815260206004820152600b60248201526a13db9b1e4814185c995b9d60aa1b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820181905291518392916000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156104a757600080fd5b505afa1580156104bb573d6000803e3d6000fd5b505050506040513d60208110156104d157600080fd5b50519050806104e257505050610409565b6000546104fa9085906001600160a01b031683610500565b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b6020831061057d5780518252601f19909201916020918201910161055e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b5091509150818015610612575080511580610612575080806020019051602081101561060f57600080fd5b50515b61064d5760405162461bcd60e51b815260040180806020018281038252602d815260200180610655602d913960400191505060405180910390fd5b505050505056fe5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212208b2a843d8fd38e3f90d45c6067cd85312e05991a000fd683f2906bbfd12908c664736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x821DE3 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3EF13367 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x6B9F96EA EQ PUSH2 0xF0 JUMPI PUSH2 0x51 JUMP JUMPDEST CALLDATASIZE PUSH2 0x51 JUMPI PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F JUMPDEST SELFBALANCE DUP1 PUSH2 0x10D JUMPI POP PUSH2 0x245 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH15 0xB8BD19BDC9DD85C99195C8B9CDBDB PUSH1 0x8A SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH1 0xF DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x183 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B CALLER DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SELFBALANCE DUP1 PUSH2 0x2D1 JUMPI POP PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH15 0xB8BD19BDC9DD85C99195C8B9CDBDB PUSH1 0x8A SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH1 0xF DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x347 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B ADDRESS DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x459 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x13DB9B1E4814185C995B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x4E2 JUMPI POP POP POP PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4FA SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x500 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x57D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x612 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x612 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x655 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH19 0x616E7366657248656C7065723A3A7361666554 PUSH19 0x616E736665723A207472616E73666572206661 PUSH10 0x6C6564A2646970667358 0x22 SLT KECCAK256 DUP12 0x2A DUP5 RETURNDATASIZE DUP16 0xD3 DUP15 EXTCODEHASH SWAP1 0xD4 0x5C PUSH1 0x67 0xCD DUP6 BALANCE 0x2E SDIV SWAP10 BYTE STOP 0xF 0xD6 DUP4 CALLCODE SWAP1 PUSH12 0xBFD12908C664736F6C634300 SMOD SDIV STOP CALLER ", "sourceMap": "6149:2614:0:-:0;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "6080604052600436106100425760003560e01c8062821de31461005957806319ab453c1461008a5780633ef13367146100bd5780636b9f96ea146100f057610051565b366100515761004f610101565b005b61004f610101565b34801561006557600080fd5b5061006e610247565b604080516001600160a01b039092168252519081900360200190f35b34801561009657600080fd5b5061004f600480360360208110156100ad57600080fd5b50356001600160a01b0316610256565b3480156100c957600080fd5b5061004f600480360360208110156100e057600080fd5b50356001600160a01b031661040c565b3480156100fc57600080fd5b5061004f5b478061010d5750610245565b60008054604080516e0b8bd19bdc9dd85c99195c8b9cdbdb608a1b815290516001600160a01b03909216918491600f808201928692909190829003018185875af1925050503d806000811461017e576040519150601f19603f3d011682016040523d82523d6000602084013e610183565b606091505b50509050806101c8576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b338360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b565b6000546001600160a01b031681565b6000546001600160a01b0316156102aa576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03831617905547806102d15750610409565b60008054604080516e0b8bd19bdc9dd85c99195c8b9cdbdb608a1b815290516001600160a01b03909216918491600f808201928692909190829003018185875af1925050503d8060008114610342576040519150601f19603f3d011682016040523d82523d6000602084013e610347565b606091505b505090508061038c576040805162461bcd60e51b815260206004820152600c60248201526b119b1d5cda0819985a5b195960a21b604482015290519081900360640190fd5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b308360003660405180856001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a150505b50565b6000546001600160a01b03163314610459576040805162461bcd60e51b815260206004820152600b60248201526a13db9b1e4814185c995b9d60aa1b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820181905291518392916000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156104a757600080fd5b505afa1580156104bb573d6000803e3d6000fd5b505050506040513d60208110156104d157600080fd5b50519050806104e257505050610409565b6000546104fa9085906001600160a01b031683610500565b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b6020831061057d5780518252601f19909201916020918201910161055e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b5091509150818015610612575080511580610612575080806020019051602081101561060f57600080fd5b50515b61064d5760405162461bcd60e51b815260040180806020018281038252602d815260200180610655602d913960400191505060405180910390fd5b505050505056fe5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212208b2a843d8fd38e3f90d45c6067cd85312e05991a000fd683f2906bbfd12908c664736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x821DE3 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3EF13367 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x6B9F96EA EQ PUSH2 0xF0 JUMPI PUSH2 0x51 JUMP JUMPDEST CALLDATASIZE PUSH2 0x51 JUMPI PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F PUSH2 0x101 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F JUMPDEST SELFBALANCE DUP1 PUSH2 0x10D JUMPI POP PUSH2 0x245 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH15 0xB8BD19BDC9DD85C99195C8B9CDBDB PUSH1 0x8A SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH1 0xF DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x183 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B CALLER DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SELFBALANCE DUP1 PUSH2 0x2D1 JUMPI POP PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH15 0xB8BD19BDC9DD85C99195C8B9CDBDB PUSH1 0x8A SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 PUSH1 0xF DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x347 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x38C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x119B1D5CDA0819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x69B31548DEA9B3B707B4DFF357D326E3E9348B24E7A6080A218A6EDEEEC48F9B ADDRESS DUP4 PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x459 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x13DB9B1E4814185C995B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 MLOAD DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x4E2 JUMPI POP POP POP PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4FA SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x500 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x57D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x612 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x612 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x655 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID SLOAD PUSH19 0x616E7366657248656C7065723A3A7361666554 PUSH19 0x616E736665723A207472616E73666572206661 PUSH10 0x6C6564A2646970667358 0x22 SLT KECCAK256 DUP12 0x2A DUP5 RETURNDATASIZE DUP16 0xD3 DUP15 EXTCODEHASH SWAP1 0xD4 0x5C PUSH1 0x67 0xCD DUP6 BALANCE 0x2E SDIV SWAP10 BYTE STOP 0xF 0xD6 DUP4 CALLCODE SWAP1 PUSH12 0xBFD12908C664736F6C634300 SMOD SDIV STOP CALLER ", "sourceMap": "6149:2614:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7763:7;:5;:7::i;:::-;6149:2614;;7591:7;:5;:7::i;6244:28::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6244:28:0;;;;;;;;;;;;;;6444:584;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6444:584:0;-1:-1:-1;;;;;6444:584:0;;:::i;7961:425::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7961:425:0;-1:-1:-1;;;;;7961:425:0;;:::i;8471:290::-;;;;;;;;;;;;;8517:21;8549:10;8545:37;;8569:7;;;8545:37;8589:12;8607:13;;:53;;;-1:-1:-1;;;8607:53:0;;;;-1:-1:-1;;;;;8607:13:0;;;;8634:5;;8607:53;;;;;8589:12;;8607:53;;;;;;;;8634:5;8607:13;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8588:72;;;8674:7;8666:32;;;;;-1:-1:-1;;;8666:32:0;;;;;;;;;;;;-1:-1:-1;;;8666:32:0;;;;;;;;;;;;;;;8709:47;8728:10;8740:5;8747:8;;8709:47;;;;-1:-1:-1;;;;;8709:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8709:47:0;;;;;;;;-1:-1:-1;8709:47:0;;-1:-1:-1;;;;;;8709:47:0;8471:290;;;:::o;6244:28::-;;;-1:-1:-1;;;;;6244:28:0;;:::o;6444:584::-;7410:3;7385:13;-1:-1:-1;;;;;7385:13:0;:29;7377:61;;;;;-1:-1:-1;;;7377:61:0;;;;;;;;;;;;-1:-1:-1;;;7377:61:0;;;;;;;;;;;;;;;6515:13:::1;:30:::0;;-1:-1:-1;;;;;;6515:30:0::1;-1:-1:-1::0;;;;;6515:30:0;::::1;;::::0;;6567:21:::1;::::0;6595:37:::1;;6619:7;;;6595:37;6639:12;6657:13:::0;;:53:::1;::::0;;-1:-1:-1;;;6657:53:0;;;;-1:-1:-1;;;;;6657:13:0;;::::1;::::0;6684:5;;6657:53:::1;::::0;;::::1;::::0;6639:12;;6657:53;;;;;;;;6684:5;6657:13;:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6638:72;;;6724:7;6716:32;;;::::0;;-1:-1:-1;;;6716:32:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6716:32:0;;;;;;;;;;;;;::::1;;6973:50;7000:4;7007:5;7014:8;;6973:50;;;;-1:-1:-1::0;;;;;6973:50:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;6973:50:0::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;6973:50:0;;-1:-1:-1;;;;;;6973:50:0::1;7444:1;;;6444:584:::0;:::o;7961:425::-;7185:13;;-1:-1:-1;;;;;7185:13:0;7171:10;:27;7163:51;;;;;-1:-1:-1;;;7163:51:0;;;;;;;;;;;;-1:-1:-1;;;7163:51:0;;;;;;;;;;;;;;;8179:36:::1;::::0;;-1:-1:-1;;;8179:36:0;;8141:4:::1;8179:36;::::0;::::1;::::0;;;;;8079:20;;8141:4;8038:23:::1;::::0;-1:-1:-1;;;;;8179:18:0;::::1;::::0;::::1;::::0;:36;;;;;::::1;::::0;;;;;;;;:18;:36;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8179:36:0;;-1:-1:-1;8225:21:0;8221:48:::1;;8256:7;;;;;8221:48;8338:13;::::0;8275:106:::1;::::0;8310:20;;-1:-1:-1;;;;;8338:13:0::1;8359:16:::0;8275:27:::1;:106::i;:::-;7220:1;;;7961:425:::0;:::o;4903:438::-;5129:45;;;-1:-1:-1;;;;;5129:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5129:45:0;-1:-1:-1;;;5129:45:0;;;5118:57;;;;5083:12;;5097:17;;5118:10;;;;5129:45;5118:57;;;5129:45;5118:57;;5129:45;5118:57;;;;;;;;;;-1:-1:-1;;5118:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5082:93;;;;5206:7;:57;;;;-1:-1:-1;5218:11:0;;:16;;:44;;;5249:4;5238:24;;;;;;;;;;;;;;;-1:-1:-1;5238:24:0;5218:44;5185:149;;;;-1:-1:-1;;;5185:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:438;;;;;:::o"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ForwarderDeposited\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"flushTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parentAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"flushTokens(address)\":{\"params\":{\"tokenContractAddress\":\"the address of the erc20 token contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"flush()\":{\"notice\":\"Flush the entire balance of the contract to the parent address.\"},\"flushTokens(address)\":{\"notice\":\"Execute a token transfer of the full balance from the forwarder token to the parent address\"},\"init(address)\":{\"notice\":\"Initialize the contract, and sets the destination address to that of the creator\"}},\"notice\":\"Contract that will forward any incoming Ether to the creator of the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Forwarder.sol\":{\"keccak256\":\"0x76f2e131bc4053ac053cc06b44a6ce24466f21a6ce2bbf5b18389bb0b52c6404\",\"urls\":[\"bzz-raw://e04f77928f5910dd55882ceb680cb8a262ef26e02c159163f7e561930f735a71\",\"dweb:/ipfs/QmcZcinCq9Xs8e9GBzRYaQwTV161tXk4DGuDDomLAs9rLj\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {"flush()": {"notice": "Flush the entire balance of the contract to the parent address."}, "flushTokens(address)": {"notice": "Execute a token transfer of the full balance from the forwarder token to the parent address"}, "init(address)": {"notice": "Initialize the contract, and sets the destination address to that of the creator"}}, "notice": "Contract that will forward any incoming Ether to the creator of the contract", "version": 1}}, "ForwarderFactory": {"abi": [{"inputs": [{"internalType": "address", "name": "_implementationAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newForwarderAddress", "type": "address"}, {"indexed": false, "internalType": "address", "name": "parentAddress", "type": "address"}], "name": "ForwarderCreated", "type": "event"}, {"inputs": [{"internalType": "address", "name": "parent", "type": "address"}, {"internalType": "bytes32", "name": "salt", "type": "bytes32"}], "name": "createForwarder", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "implementationAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"Forwarder.sol\":8765:9437  contract ForwarderFactory is CloneFactory {... */\n  mstore(0x40, 0x80)\n    /* \"Forwarder.sol\":8931:9032  constructor(address _implementationAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"Forwarder.sol\":8981:9002  implementationAddress */\n  0x00\n    /* \"Forwarder.sol\":8981:9027  implementationAddress = _implementationAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Forwarder.sol\":8765:9437  contract ForwarderFactory is CloneFactory {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Forwarder.sol\":8765:9437  contract ForwarderFactory is CloneFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb97a2319\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfb90b320\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Forwarder.sol\":8811:8847  address public implementationAddress */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Forwarder.sol\":9036:9435  function createForwarder(address parent, bytes32 salt) external {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Forwarder.sol\":8811:8847  address public implementationAddress */\n    tag_6:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"Forwarder.sol\":9036:9435  function createForwarder(address parent, bytes32 salt) external {... */\n    tag_9:\n        /* \"Forwarder.sol\":9246:9276  abi.encodePacked(parent, salt) */\n      0x40\n      dup1\n      mload\n      not(0xffffffffffffffffffffffff)\n      0x60\n      dup6\n      swap1\n      shl\n      and\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x34\n      dup1\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x54\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"Forwarder.sol\":9236:9277  keccak256(abi.encodePacked(parent, salt)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"Forwarder.sol\":9216:9233  bytes32 finalSalt */\n      0x00\n        /* \"Forwarder.sol\":9320:9341  implementationAddress */\n      dup1\n      sload\n        /* \"Forwarder.sol\":9308:9353  createClone(implementationAddress, finalSalt) */\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":9320:9341  implementationAddress */\n      and\n        /* \"Forwarder.sol\":9236:9277  keccak256(abi.encodePacked(parent, salt)) */\n      dup4\n        /* \"Forwarder.sol\":9308:9319  createClone */\n      tag_12\n        /* \"Forwarder.sol\":9308:9353  createClone(implementationAddress, finalSalt) */\n      jump\t// in\n    tag_11:\n        /* \"Forwarder.sol\":9284:9353  address payable clone = createClone(implementationAddress, finalSalt) */\n      swap1\n      pop\n        /* \"Forwarder.sol\":9369:9374  clone */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Forwarder.sol\":9359:9380  Forwarder(clone).init */\n      and\n      0x19ab453c\n        /* \"Forwarder.sol\":9381:9387  parent */\n      dup6\n        /* \"Forwarder.sol\":9359:9388  Forwarder(clone).init(parent) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n        /* \"Forwarder.sol\":9399:9430  ForwarderCreated(clone, parent) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      dup3\n      mstore\n      dup9\n      and\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0xa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b5204\n      swap5\n      pop\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap2\n      pop\n      log1\n        /* \"Forwarder.sol\":9036:9435  function createForwarder(address parent, bytes32 salt) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Forwarder.sol\":1351:2804  function createClone(address target, bytes32 salt)... */\n    tag_12:\n        /* \"Forwarder.sol\":1428:1450  address payable result */\n      0x00\n        /* \"Forwarder.sol\":1460:1479  bytes20 targetBytes */\n      dup1\n        /* \"Forwarder.sol\":1490:1496  target */\n      dup4\n        /* \"Forwarder.sol\":1482:1497  bytes20(target) */\n      0x60\n      shl\n        /* \"Forwarder.sol\":1460:1497  bytes20 targetBytes = bytes20(target) */\n      swap1\n      pop\n        /* \"Forwarder.sol\":1623:1627  0x40 */\n      0x40\n        /* \"Forwarder.sol\":1617:1628  mload(0x40) */\n      mload\n      shl(0x60, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n        /* \"Forwarder.sol\":1964:1969  clone */\n      dup2\n        /* \"Forwarder.sol\":1948:2053  mstore(... */\n      mstore\n        /* \"Forwarder.sol\":2224:2235  targetBytes */\n      dup2\n        /* \"Forwarder.sol\":2217:2221  0x14 */\n      0x14\n        /* \"Forwarder.sol\":2210:2215  clone */\n      dup3\n        /* \"Forwarder.sol\":2206:2222  add(clone, 0x14) */\n      add\n        /* \"Forwarder.sol\":2199:2236  mstore(add(clone, 0x14), targetBytes) */\n      mstore\n      shl(0x88, 0x5af43d82803e903d91602b57fd5bf3)\n        /* \"Forwarder.sol\":2448:2452  0x28 */\n      0x28\n        /* \"Forwarder.sol\":2441:2446  clone */\n      dup3\n        /* \"Forwarder.sol\":2437:2453  add(clone, 0x28) */\n      add\n        /* \"Forwarder.sol\":2421:2537  mstore(... */\n      mstore\n        /* \"Forwarder.sol\":2789:2793  salt */\n      dup4\n        /* \"Forwarder.sol\":2783:2787  0x37 */\n      0x37\n        /* \"Forwarder.sol\":2776:2781  clone */\n      dup3\n        /* \"Forwarder.sol\":2773:2774  0 */\n      0x00\n        /* \"Forwarder.sol\":2765:2794  create2(0, clone, 0x37, salt) */\n      create2\n        /* \"Forwarder.sol\":2755:2794  result := create2(0, clone, 0x37, salt) */\n      swap6\n        /* \"Forwarder.sol\":1512:2800  {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122082ff0e157a96aebabd62198540dc3d9aa1f313b33963296ced2c610c48e890e964736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b506040516102963803806102968339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610231806100656000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b97a23191461003b578063fb90b3201461005f575b600080fd5b61004361008d565b604080516001600160a01b039092168252519081900360200190f35b61008b6004803603604081101561007557600080fd5b506001600160a01b03813516906020013561009c565b005b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606085901b1660208083019190915260348083018590528351808403909101815260549092019092528051910120600080546100f3906001600160a01b0316836101a7565b9050806001600160a01b03166319ab453c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b5050604080516001600160a01b0380861682528816602082015281517fa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b52049450908190039091019150a150505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b6028820152836037826000f59594505050505056fea264697066735822122082ff0e157a96aebabd62198540dc3d9aa1f313b33963296ced2c610c48e890e964736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x296 CODESIZE SUB DUP1 PUSH2 0x296 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x231 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB97A2319 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB90B320 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH2 0xF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19AB453C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xA35EA2CC726861482A50A162C72AAD60965CC64641D419CD4D675036238B5204 SWAP5 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 POP LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP4 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SELFDESTRUCT 0xE ISZERO PUSH27 0x96AEBABD62198540DC3D9AA1F313B33963296CED2C610C48E890E9 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "8765:672:0:-:0;;;8931:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8931:101:0;8981:21;:46;;-1:-1:-1;;;;;8981:46:0;;;-1:-1:-1;;;;;;8981:46:0;;;;;;;;;8765:672;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b97a23191461003b578063fb90b3201461005f575b600080fd5b61004361008d565b604080516001600160a01b039092168252519081900360200190f35b61008b6004803603604081101561007557600080fd5b506001600160a01b03813516906020013561009c565b005b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606085901b1660208083019190915260348083018590528351808403909101815260549092019092528051910120600080546100f3906001600160a01b0316836101a7565b9050806001600160a01b03166319ab453c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b5050604080516001600160a01b0380861682528816602082015281517fa35ea2cc726861482a50a162c72aad60965cc64641d419cd4d675036238b52049450908190039091019150a150505050565b6000808360601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b6028820152836037826000f59594505050505056fea264697066735822122082ff0e157a96aebabd62198540dc3d9aa1f313b33963296ced2c610c48e890e964736f6c63430007050033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB97A2319 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB90B320 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH2 0xF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19AB453C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xA35EA2CC726861482A50A162C72AAD60965CC64641D419CD4D675036238B5204 SWAP5 POP SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP2 POP LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP4 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SELFDESTRUCT 0xE ISZERO PUSH27 0x96AEBABD62198540DC3D9AA1F313B33963296CED2C610C48E890E9 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ", "sourceMap": "8765:672:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8811:36;;;:::i;:::-;;;;-1:-1:-1;;;;;8811:36:0;;;;;;;;;;;;;;9036:399;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9036:399:0;;;;;;;;:::i;:::-;;8811:36;;;-1:-1:-1;;;;;8811:36:0;;:::o;9036:399::-;9246:30;;;-1:-1:-1;;9246:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9236:41;;;;;9216:17;9320:21;;9308:45;;-1:-1:-1;;;;;9320:21:0;9236:41;9308:11;:45::i;:::-;9284:69;;9369:5;-1:-1:-1;;;;;9359:21:0;;9381:6;9359:29;;;;;;;;;;;;;-1:-1:-1;;;;;9359:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9399:31:0;;;-1:-1:-1;;;;;9399:31:0;;;;;;;;;;;;;;;-1:-1:-1;9399:31:0;;;;;;;;-1:-1:-1;9399:31:0;9036:399;;;;:::o;1351:1453::-;1428:22;1460:19;1490:6;1482:15;;1460:37;;1623:4;1617:11;-1:-1:-1;;;1964:5:0;1948:105;2224:11;2217:4;2210:5;2206:16;2199:37;-1:-1:-1;;;2448:4:0;2441:5;2437:16;2421:116;2789:4;2783;2776:5;2773:1;2765:29;2755:39;1512:1288;-1:-1:-1;;;;;1512:1288:0:o"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newForwarderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"}],\"name\":\"ForwarderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Forwarder.sol\":\"ForwarderFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Forwarder.sol\":{\"keccak256\":\"0x76f2e131bc4053ac053cc06b44a6ce24466f21a6ce2bbf5b18389bb0b52c6404\",\"urls\":[\"bzz-raw://e04f77928f5910dd55882ceb680cb8a262ef26e02c159163f7e561930f735a71\",\"dweb:/ipfs/QmcZcinCq9Xs8e9GBzRYaQwTV161tXk4DGuDDomLAs9rLj\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "TransferHelper": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"Forwarder.sol\":4434:6055  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Forwarder.sol\":4434:6055  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206067edacd2c9b16119f2994713d8939e567c9ce59931bc459a58ba343d43399064736f6c63430007050033\n}\n", "bytecode": {"generatedSources": [], "linkReferences": {}, "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206067edacd2c9b16119f2994713d8939e567c9ce59931bc459a58ba343d43399064736f6c63430007050033", "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x67 0xED 0xAC 0xD2 0xC9 0xB1 PUSH2 0x19F2 SWAP10 SELFBALANCE SGT 0xD8 SWAP4 SWAP15 JUMP PUSH29 0x9CE59931BC459A58BA343D43399064736F6C6343000705003300000000 ", "sourceMap": "4434:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206067edacd2c9b16119f2994713d8939e567c9ce59931bc459a58ba343d43399064736f6c63430007050033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x67 0xED 0xAC 0xD2 0xC9 0xB1 PUSH2 0x19F2 SWAP10 SELFBALANCE SGT 0xD8 SWAP4 SWAP15 JUMP PUSH29 0x9CE59931BC459A58BA343D43399064736F6C6343000705003300000000 ", "sourceMap": "4434:1621:0:-:0;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Forwarder.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Forwarder.sol\":{\"keccak256\":\"0x76f2e131bc4053ac053cc06b44a6ce24466f21a6ce2bbf5b18389bb0b52c6404\",\"urls\":[\"bzz-raw://e04f77928f5910dd55882ceb680cb8a262ef26e02c159163f7e561930f735a71\",\"dweb:/ipfs/QmcZcinCq9Xs8e9GBzRYaQwTV161tXk4DGuDDomLAs9rLj\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "errors": [{"component": "general", "errorCode": "1878", "formattedMessage": "Forwarder.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n", "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.", "severity": "warning", "sourceLocation": {"end": -1, "file": "Forwarder.sol", "start": -1}, "type": "Warning"}], "sources": {"Forwarder.sol": {"id": 0}}}