{"contracts": {"01_05_FTB.sol": {"FTB": {"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "version": 1}, "evm": {"assembly": "    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_5, callvalue)\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  0x15\n  dup2\n  mstore\n  0x20\n  0x466f6c6c6f772054686520426c6f636b636861696e0000000000000000000000\n  dup2\n  dup4\n  add\n  mstore\n  dup3\n  mload\n  swap1\n  tag_8\n  dup3\n  tag_1\n  jump\t// in\ntag_8:\n  0x03\n  dup3\n  mstore\n  shl(0xe9, 0x232a21)\n  dup2\n  dup4\n  add\n  mstore\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  tag_9\n    /* \"02_05_ERC1155Creator.sol\":444:486   */\n  0x6bf5ed59de0e19999d264746843ff931c0133090\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  swap3\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup5\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  dup6\n  mload\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  swap2\n  dup3\n  swap2\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  tag_10\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  dup6\n  dup5\n  add\n  swap8\n  shl(0xe1, 0x266c45bb)\n  dup10\n  mstore\n  dup10\n  0x24\n  dup7\n  add\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_3\n  jump\t// in\ntag_10:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_3\n  jump\t// in\ntag_9:\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  sub\n  swap1\n  tag_11\n  not(0x1f)\n  swap3\n  dup4\n  dup2\n  add\n  dup4\n  mstore\n  dup3\n  tag_2\n  jump\t// in\ntag_11:\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap6\n  swap1\n  swap5\n  0x60\n  dup7\n  add\n  swap2\n  dup8\n  dup4\n  gt\n  dup8\n  dup5\n  lt\n  or\n  tag_16\n  jumpi\n  0x00\n  swap4\n  dup5\n  swap4\n  dup11\n  mstore\n  0x27\n  dup9\n  mstore\n  0x416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c\n  dup8\n  dup10\n  add\n  mstore\n  shl(0xca, 0x0819985a5b1959)\n  dup11\n  dup10\n  add\n  mstore\n    /* \"04_05_Address.sol\":7060:7085   */\n  mload\n  swap2\n  gas\n  delegatecall\n  swap1\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  jumpi(tag_14, iszero(returndatasize))\n  returndatasize\n  swap5\n  dup6\n  gt\n  tag_16\n  jumpi\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_18\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  swap5\n  tag_19\n  dup5\n  dup9\n  mload\n  swap4\n  0x1f\n  dup5\n  add\n  and\n  add\n  dup4\n  tag_2\n  jump\t// in\ntag_19:\n  dup2\n  mstore\n  0x00\n  dup2\n  swap4\n  returndatasize\n  swap3\n  add\n  returndatacopy\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_4\n  jump\t// in\ntag_18:\n  pop\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_16:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  0x24\n  0x00\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  revert\ntag_14:\n  pop\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_18\n  swap4\n  pop\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  0x60\n  swap2\n  pop\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_4\n  jump\t// in\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\ntag_5:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_16\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_16\n  jumpi\n  0x40\n  mstore\n  jump\t// out\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\ntag_3:\n  swap2\n  swap1\n  dup3\n  mload\n  swap3\n  dup4\n  dup3\n  mstore\n  0x00\ntag_25:\n  dup5\n  dup2\n  lt\n  tag_26\n  jumpi\n  pop\n  pop\n  dup3\n  0x00\n  0x20\n  dup1\n  swap5\n  swap6\n  dup5\n  add\n  add\n  mstore\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  0x1f\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  dup1\n  not\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  swap2\n  add\n  and\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  add\n  add\n  swap1\n  jump\t// out\ntag_26:\n  0x20\n  dup2\n  dup4\n  add\n  dup2\n  add\n  mload\n  dup5\n  dup4\n  add\n  dup3\n  add\n  mstore\n  add\n  jump(tag_25)\n    /* \"04_05_Address.sol\":7466:8094   */\ntag_4:\n  swap1\n  swap2\n  swap1\n    /* \"04_05_Address.sol\":7670:8088   */\n  iszero\n  tag_28\n  jumpi\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  pop\n  dup1\n  mload\n    /* \"04_05_Address.sol\":7701:7723   */\n  iszero\n    /* \"04_05_Address.sol\":7697:7983   */\n  tag_30\n  jumpi\n    /* \"04_05_Address.sol\":7996:8013   */\n  swap1\n  jump\t// out\n    /* \"04_05_Address.sol\":7697:7983   */\ntag_30:\n    /* \"02_05_ERC1155Creator.sol\":444:486   */\n  0x6bf5ed59de0e19999d264746843ff931c0133090\n    /* \"04_05_Address.sol\":1465:1484   */\n  extcodesize\n    /* \"04_05_Address.sol\":1465:1488   */\n  iszero\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  tag_32\n  jumpi\n    /* \"04_05_Address.sol\":7996:8013   */\n  swap1\n  jump\t// out\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\ntag_32:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1d\n  0x24\n  dup3\n  add\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  mstore\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  0x44\n  dup3\n  add\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  mstore\n  0x64\n  swap1\n  revert\n    /* \"04_05_Address.sol\":7670:8088   */\ntag_28:\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  dup2\n  mload\n    /* \"04_05_Address.sol\":8775:8796   */\n  iszero\n    /* \"04_05_Address.sol\":8775:8792   */\n  tag_34\n  jumpi\n    /* \"04_05_Address.sol\":8947:9089   */\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"04_05_Address.sol\":8771:9150   */\ntag_34:\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n    /* \"04_05_Address.sol\":9119:9139   */\n  dup2\n  mstore\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  0x20\n    /* \"04_05_Address.sol\":9119:9139   */\n  0x04\n  dup3\n  add\n    /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n  mstore\n  swap1\n  dup2\n  swap1\n  tag_36\n  swap1\n  0x24\n  dup4\n  add\n  swap1\n  tag_3\n  jump\t// in\ntag_36:\n    /* \"04_05_Address.sol\":9119:9139   */\n  sub\n  swap1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      calldatasize\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n        /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n      jumpi\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n      jump\t// in\n        /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n    tag_2:\n      jumpi(tag_3, sub(0x5c60da1b, shr(0xe0, calldataload(0x00))))\n      jumpi(tag_10, callvalue)\n      jumpi(tag_10, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"02_05_ERC1155Creator.sol\":951:1017   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      0x00\n      dup1\n      revert\n        /* \"03_05_Proxy.sol\":2322:2432   */\n    tag_1:\n        /* \"02_05_ERC1155Creator.sol\":951:1017   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"01_05_FTB.sol\":14250:14352  contract FTB is ERC1155Creator {... */\n      and\n        /* \"03_05_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_12\n      jumpi\n      return(0x00, returndatasize)\n    tag_12:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa264697066735822122048ceae8ccccf7339289b84d8e138df3af5ee8101bbb82b9f178375e8db2c364e64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_encode_string": {"entryPoint": 501, "id": null, "parameterSlots": 2, "returnSlots": 1}, "finalize_allocation": {"entryPoint": 466, "id": null, "parameterSlots": 2, "returnSlots": 0}, "finalize_allocation_2218": {"entryPoint": 439, "id": null, "parameterSlots": 1, "returnSlots": 0}, "fun_verifyCallResultFromTarget": {"entryPoint": 563, "id": 430, "parameterSlots": 3, "returnSlots": 1}}, "generatedSources": [], "linkReferences": {}, "object": "6080604090808252346101b357610015816101b7565b6015815260207f466f6c6c6f772054686520426c6f636b636861696e00000000000000000000008183015282519061004c826101b7565b6003825262232a2160e91b818301526100dc736bf5ed59de0e19999d264746843ff931c0133090927f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8460018060a01b031982541617905585519182916100ca8584019763266c45bb60e11b895289602486015260648501906101f5565b838103602319016044850152906101f5565b03906100f0601f19928381018352826101d2565b85516001600160401b03959094606086019187831187841017610190575f9384938a52602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a89015251915af4903d156101a4573d948511610190576101839461017584885193601f84011601836101d2565b81525f81933d92013e610233565b505160e890816102e28239f35b634e487b7160e01b5f52604160045260245ffd5b50610183935060609150610233565b5f80fd5b604081019081106001600160401b0382111761019057604052565b601f909101601f19168101906001600160401b0382119082101761019057604052565b91908251928382525f5b84811061021f575050825f602080949584010152601f8019910116010190565b6020818301810151848301820152016101ff565b909190156102a957508051156102465790565b736bf5ed59de0e19999d264746843ff931c01330903b156102645790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8151156102b95750805190602001fd5b60405162461bcd60e51b8152602060048201529081906102dd9060248301906101f5565b0390fdfe608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea264697066735822122048ceae8ccccf7339289b84d8e138df3af5ee8101bbb82b9f178375e8db2c364e64736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x1B3 JUMPI PUSH2 0x15 DUP2 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 PUSH32 0x466F6C6C6F772054686520426C6F636B636861696E0000000000000000000000 DUP2 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x4C DUP3 PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x232A21 PUSH1 0xE9 SHL DUP2 DUP4 ADD MSTORE PUSH2 0xDC PUSH20 0x6BF5ED59DE0E19999D264746843FF931C0133090 SWAP3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 MLOAD SWAP2 DUP3 SWAP2 PUSH2 0xCA DUP6 DUP5 ADD SWAP8 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP10 MSTORE DUP10 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x1F5 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x1F5 JUMP JUMPDEST SUB SWAP1 PUSH2 0xF0 PUSH1 0x1F NOT SWAP3 DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1D2 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 SWAP1 SWAP5 PUSH1 0x60 DUP7 ADD SWAP2 DUP8 DUP4 GT DUP8 DUP5 LT OR PUSH2 0x190 JUMPI PUSH0 SWAP4 DUP5 SWAP4 DUP11 MSTORE PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP2 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE SWAP5 DUP6 GT PUSH2 0x190 JUMPI PUSH2 0x183 SWAP5 PUSH2 0x175 DUP5 DUP9 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x1D2 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x233 JUMP JUMPDEST POP MLOAD PUSH1 0xE8 SWAP1 DUP2 PUSH2 0x2E2 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH2 0x183 SWAP4 POP PUSH1 0x60 SWAP2 POP PUSH2 0x233 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x190 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x190 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x21F JUMPI POP POP DUP3 PUSH0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1FF JUMP JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x2A9 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x246 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0x6BF5ED59DE0E19999D264746843FF931C0133090 EXTCODESIZE ISZERO PUSH2 0x264 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2B9 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x2DD SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1F5 JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xCE 0xAE DUP13 0xCC 0xCF PUSH20 0x39289B84D8E138DF3AF5EE8101BBB82B9F178375 0xE8 0xDB 0x2C CALLDATASIZE 0x4E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "14250:102:0:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;14250:102:0;;;;951:66:1;444:42;951:66;;;;;;;;;;;;;;;14250:102:0;;594:66:1;;;951;594;;;;;;;;;;;;;951;;;;;;:::i;:::-;;;;-1:-1:-1;;951:66:1;;;;;;;:::i;:::-;594;;;;;;;;;;;;;:::i;:::-;14250:102:0;;-1:-1:-1;;;;;14250:102:0;;;;;;;;;;;;;;;;-1:-1:-1;14250:102:0;;;;;;;;;;;;;-1:-1:-1;;;14250:102:0;;;;7060:25:3;;;;;14250:102:0;;;;;;;;;;7102:69:3;14250:102:0;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;14250:102:0;;;;;;7102:69:3;:::i;:::-;;14250:102:0;;;;;;;;;;;;-1:-1:-1;14250:102:0;;;;594:66:1;-1:-1:-1;14250:102:0;;-1:-1:-1;7102:69:3;;-1:-1:-1;14250:102:0;;-1:-1:-1;7102:69:3;:::i;14250:102:0:-;;;;;;;;;;;-1:-1:-1;;;;;14250:102:0;;;;;;;:::o;:::-;;;;;-1:-1:-1;;14250:102:0;;;;-1:-1:-1;;;;;14250:102:0;;;;;;;;;;:::o;951:66:1:-;;;;;;;;;-1:-1:-1;951:66:1;;;;;;;;;-1:-1:-1;951:66:1;;;;;;;;14250:102:0;594:66:1;;14250:102:0;;;951:66:1;;;:::o;:::-;;;;;;;;;;;;;;;;;7466:628:3;;;;7670:418;;;951:66:1;;;7701:22:3;7697:286;;7996:17;:::o;7697:286::-;444:42:1;1465:19:3;:23;14250:102:0;;7996:17:3;:::o;14250:102:0:-;;;-1:-1:-1;;;14250:102:0;;;;;;;;;;;951:66:1;14250:102:0;951:66:1;;;14250:102:0;;;;7670:418:3;951:66:1;;8775:21:3;:17;;8947:142;;;;;;;8771:379;14250:102:0;;-1:-1:-1;;;9119:20:3;;14250:102:0;9119:20:3;;;14250:102:0;;;;;;;;;;;:::i;:::-;9119:20:3;;"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 106, "id": 123, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea264697066735822122048ceae8ccccf7339289b84d8e138df3af5ee8101bbb82b9f178375e8db2c364e64736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xCE 0xAE DUP13 0xCC 0xCF PUSH20 0x39289B84D8E138DF3AF5EE8101BBB82B9F178375 0xE8 0xDB 0x2C CALLDATASIZE 0x4E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "14250:102:0:-:0;;;;;;;;;-1:-1:-1;14250:102:0;2853:63:2;14250:102:0;2853:63:2;:::i;14250:102:0:-;;;;;;;;;;;;;;-1:-1:-1;;14250:102:0;;;;951:66:1;;-1:-1:-1;;;;;14250:102:0;;;;;;;;;;;;2322:110:2;951:66:1;;-1:-1:-1;;;;;;;;;14250:102:0;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;-1:-1:-1;1018:819:2;;;;;;-1:-1:-1;1018:819:2;;;-1:-1:-1;1018:819:2"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"01_05_FTB.sol\":\"FTB\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"01_05_FTB.sol\":{\"keccak256\":\"0xc2ecb359e799169694fb986ba64d467460783c6cd94f65044a12a42c1ae4727f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b026ce4d15c28ff6782e56c08d931d679d5804248e405a1a3b0f5a305acecac\",\"dweb:/ipfs/QmbsXSa7qnSdottrHxuvdubjSfK9WPPZWvV2djm2mjAZUf\"]},\"02_05_ERC1155Creator.sol\":{\"keccak256\":\"0x1cc474e69786465e4d5b633051de7fd7df888fc0a5dad0c7cc61801cb00af8eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721f1de392d5bdf9c461403a99ce04ba8480df0b353735a04b45ce9f1b1fa3cf\",\"dweb:/ipfs/QmSd3cU5yHNv4aRYfwJDWgT4TZKPA5uosbhuAzYQd4giUH\"]},\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]},\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]},\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "02_05_ERC1155Creator.sol": {"ERC1155Creator": {"abi": [{"inputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"stateMutability": "payable", "type": "fallback"}, {"inputs": [], "name": "implementation", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"kind": "dev", "methods": {"implementation()": {"details": "Returns the current implementation address."}}, "stateVariables": {"_IMPLEMENTATION_SLOT": {"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}}, "version": 1}, "evm": {"assembly": "    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x80\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_15, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  swap2\n  tag_9\n  dup3\n  dup6\n  tag_1\n  jump\t// in\ntag_9:\n  dup4\n  codecopy\n  dup2\n  add\n  dup3\n  dup3\n  dup3\n  sub\n  slt\n  tag_15\n  jumpi\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  swap2\n  swap1\n  dup3\n  dup2\n  gt\n  tag_15\n  jumpi\n  dup2\n  tag_14\n  swap2\n  dup6\n  add\n  tag_4\n  jump\t// in\ntag_14:\n  swap3\n  0x20\n  dup2\n  add\n  mload\n  swap2\n  dup4\n  dup4\n  gt\n  tag_15\n  jumpi\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  tag_17\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  swap3\n  tag_18\n  swap3\n  add\n  tag_4\n  jump\t// in\ntag_18:\n    /* \"02_05_ERC1155Creator.sol\":444:486   */\n  swap2\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  tag_19\n    /* \"02_05_ERC1155Creator.sol\":444:486   */\n  0x6bf5ed59de0e19999d264746843ff931c0133090\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  swap4\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n  dup6\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x01\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  dup7\n  mload\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  swap4\n  dup5\n  swap2\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  tag_20\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x20\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  dup5\n  add\n  swap9\n  shl(0xe1, 0x266c45bb)\n  dup11\n  mstore\n  dup11\n  0x24\n  dup7\n  add\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  mstore\n  0x64\n  dup6\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_20:\n  dup4\n  dup2\n  sub\n  not(0x23)\n  add\n  0x44\n  dup6\n  add\n  mstore\n  swap1\n  tag_5\n  jump\t// in\ntag_17:\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  sub\n  not(0x1f)\n  dup2\n  add\n  dup5\n  mstore\n  dup4\n  tag_1\n  jump\t// in\ntag_19:\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  dup5\n  mload\n  swap3\n  0x60\n  dup5\n  add\n  swap2\n  dup3\n  gt\n  dup5\n  dup4\n  lt\n  or\n  tag_21\n  jumpi\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_23\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  swap5\n  0x00\n  swap4\n  dup5\n  swap4\n  dup9\n  mstore\n  0x27\n  dup7\n  mstore\n  0x416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c\n  0x20\n  dup8\n  add\n  mstore\n  shl(0xca, 0x0819985a5b1959)\n  dup9\n  dup8\n  add\n  mstore\n    /* \"04_05_Address.sol\":7060:7085   */\n  mload\n  swap2\n  gas\n  delegatecall\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  jumpi(tag_24, iszero(returndatasize))\n  returndatasize\n  swap1\n  tag_26\n  dup3\n  tag_2\n  jump\t// in\ntag_26:\n  swap2\n  tag_27\n  dup7\n  mload\n  swap4\n  dup5\n  tag_1\n  jump\t// in\ntag_27:\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_6\n  jump\t// in\ntag_23:\n  pop\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  mload\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_24:\n  0x60\n  swap1\n    /* \"04_05_Address.sol\":7102:7171   */\n  tag_6\n  jump\t// in\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\ntag_21:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n    /* \"02_05_ERC1155Creator.sol\":594:660   */\n  0x24\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x00\n  revert\ntag_15:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_21\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_21\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_3:\n  0x00\ntag_33:\n  dup4\n  dup2\n  lt\n  tag_34\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_34:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_33)\ntag_4:\n  dup2\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  mload\n  tag_38\n  dup2\n  tag_2\n  jump\t// in\ntag_38:\n  swap3\n  tag_39\n  mload(0x40)\n  swap5\n  dup6\n  tag_1\n  jump\t// in\ntag_39:\n  dup2\n  dup5\n  mstore\n  0x20\n  dup3\n  dup5\n  add\n  add\n  gt\n  tag_15\n  jumpi\n  tag_42\n  swap2\n  0x20\n  dup1\n  dup6\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_42:\n  swap1\n  jump\t// out\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\ntag_5:\n  swap1\n  0x20\n  swap2\n  tag_43\n  dup2\n  mload\n  dup1\n  swap3\n  dup2\n  dup6\n  mstore\n  dup6\n  dup1\n  dup7\n  add\n  swap2\n  add\n  tag_3\n  jump\t// in\ntag_43:\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x1f\n  add\n  not(0x1f)\n  and\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  add\n  add\n  swap1\n  jump\t// out\n    /* \"04_05_Address.sol\":7466:8094   */\ntag_6:\n  swap1\n  swap2\n  swap1\n    /* \"04_05_Address.sol\":7670:8088   */\n  iszero\n  tag_44\n  jumpi\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  pop\n  dup1\n  mload\n    /* \"04_05_Address.sol\":7701:7723   */\n  iszero\n    /* \"04_05_Address.sol\":7697:7983   */\n  tag_46\n  jumpi\n    /* \"04_05_Address.sol\":7996:8013   */\n  swap1\n  jump\t// out\n    /* \"04_05_Address.sol\":7697:7983   */\ntag_46:\n    /* \"02_05_ERC1155Creator.sol\":444:486   */\n  0x6bf5ed59de0e19999d264746843ff931c0133090\n    /* \"04_05_Address.sol\":1465:1484   */\n  extcodesize\n    /* \"04_05_Address.sol\":1465:1488   */\n  iszero\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  tag_48\n  jumpi\n    /* \"04_05_Address.sol\":7996:8013   */\n  swap1\n  jump\t// out\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\ntag_48:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1d\n  0x24\n  dup3\n  add\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  mstore\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  0x44\n  dup3\n  add\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  mstore\n  0x64\n  swap1\n  revert\n    /* \"04_05_Address.sol\":7670:8088   */\ntag_44:\n    /* \"02_05_ERC1155Creator.sol\":951:1017   */\n  dup2\n  mload\n    /* \"04_05_Address.sol\":8775:8796   */\n  iszero\n    /* \"04_05_Address.sol\":8775:8792   */\n  tag_50\n  jumpi\n    /* \"04_05_Address.sol\":8947:9089   */\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  revert\n    /* \"04_05_Address.sol\":8771:9150   */\ntag_50:\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n    /* \"04_05_Address.sol\":9119:9139   */\n  dup2\n  mstore\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  0x20\n    /* \"04_05_Address.sol\":9119:9139   */\n  0x04\n  dup3\n  add\n    /* \"02_05_ERC1155Creator.sol\":178:1353   */\n  mstore\n  swap1\n  dup2\n  swap1\n  tag_52\n  swap1\n  0x24\n  dup4\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_52:\n    /* \"04_05_Address.sol\":9119:9139   */\n  sub\n  swap1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"02_05_ERC1155Creator.sol\":178:1353   */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n    tag_3:\n      calldatasize\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n        /* \"02_05_ERC1155Creator.sol\":178:1353   */\n      jumpi\n        /* \"03_05_Proxy.sol\":2853:2916   */\n      tag_1\n      jump\t// in\n        /* \"02_05_ERC1155Creator.sol\":178:1353   */\n    tag_2:\n      jumpi(tag_3, sub(0x5c60da1b, shr(0xe0, calldataload(0x00))))\n      jumpi(tag_10, callvalue)\n      jumpi(tag_10, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"02_05_ERC1155Creator.sol\":951:1017   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"02_05_ERC1155Creator.sol\":178:1353   */\n      and\n      0x80\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      0x00\n      dup1\n      revert\n        /* \"03_05_Proxy.sol\":2322:2432   */\n    tag_1:\n        /* \"02_05_ERC1155Creator.sol\":951:1017   */\n      sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"02_05_ERC1155Creator.sol\":178:1353   */\n      and\n        /* \"03_05_Proxy.sol\":1018:1837   */\n      calldatasize\n      dup3\n      dup1\n      calldatacopy\n      dup2\n      calldatasize\n      swap2\n      gas\n      delegatecall\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      iszero\n      tag_12\n      jumpi\n      return(0x00, returndatasize)\n    tag_12:\n      revert(0x00, returndatasize)\n\n    auxdata: 0xa2646970667358221220abc3c5a324bdb9275962f946b399ff128f4798458fab51853c897cd3f17022f064736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {"abi_decode_string_fromMemory": {"entryPoint": 520, "id": null, "parameterSlots": 2, "returnSlots": 1}, "abi_encode_string": {"entryPoint": 589, "id": null, "parameterSlots": 2, "returnSlots": 1}, "array_allocation_size_string": {"entryPoint": 460, "id": null, "parameterSlots": 1, "returnSlots": 1}, "copy_memory_to_memory_with_cleanup": {"entryPoint": 487, "id": null, "parameterSlots": 3, "returnSlots": 0}, "finalize_allocation": {"entryPoint": 425, "id": null, "parameterSlots": 2, "returnSlots": 0}, "fun_verifyCallResultFromTarget": {"entryPoint": 626, "id": 430, "parameterSlots": 3, "returnSlots": 1}}, "generatedSources": [], "linkReferences": {}, "object": "6080604090808252346101a557610409803803809161001e82856101a9565b8339810182828203126101a55781516001600160401b0391908281116101a5578161004a918501610208565b926020810151918383116101a5576100e9926100669201610208565b916100f7736bf5ed59de0e19999d264746843ff931c0133090937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8560018060a01b031982541617905586519384916100d7602084019863266c45bb60e11b8a528a6024860152606485019061024d565b8381036023190160448501529061024d565b03601f1981018452836101a9565b84519260608401918211848310176101915761017c945f9384938852602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020870152660819985a5b195960ca1b8887015251915af43d15610189573d90610161826101cc565b9161016e865193846101a9565b82523d5f602084013e610272565b505160e890816103218239f35b606090610272565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761019157604052565b6001600160401b03811161019157601f01601f191660200190565b5f5b8381106101f85750505f910152565b81810151838201526020016101e9565b81601f820112156101a557805161021e816101cc565b9261022c60405194856101a9565b818452602082840101116101a55761024a91602080850191016101e7565b90565b90602091610266815180928185528580860191016101e7565b601f01601f1916010190565b909190156102e857508051156102855790565b736bf5ed59de0e19999d264746843ff931c01330903b156102a35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8151156102f85750805190602001fd5b60405162461bcd60e51b81526020600482015290819061031c90602483019061024d565b0390fdfe608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea2646970667358221220abc3c5a324bdb9275962f946b399ff128f4798458fab51853c897cd3f17022f064736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x1A5 JUMPI PUSH2 0x409 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1E DUP3 DUP6 PUSH2 0x1A9 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD DUP3 DUP3 DUP3 SUB SLT PUSH2 0x1A5 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP2 GT PUSH2 0x1A5 JUMPI DUP2 PUSH2 0x4A SWAP2 DUP6 ADD PUSH2 0x208 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD MLOAD SWAP2 DUP4 DUP4 GT PUSH2 0x1A5 JUMPI PUSH2 0xE9 SWAP3 PUSH2 0x66 SWAP3 ADD PUSH2 0x208 JUMP JUMPDEST SWAP2 PUSH2 0xF7 PUSH20 0x6BF5ED59DE0E19999D264746843FF931C0133090 SWAP4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0xD7 PUSH1 0x20 DUP5 ADD SWAP9 PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP11 MSTORE DUP11 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD SWAP1 PUSH2 0x24D JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP6 ADD MSTORE SWAP1 PUSH2 0x24D JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1A9 JUMP JUMPDEST DUP5 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 GT DUP5 DUP4 LT OR PUSH2 0x191 JUMPI PUSH2 0x17C SWAP5 PUSH0 SWAP4 DUP5 SWAP4 DUP9 MSTORE PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP9 DUP8 ADD MSTORE MLOAD SWAP2 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x161 DUP3 PUSH2 0x1CC JUMP JUMPDEST SWAP2 PUSH2 0x16E DUP7 MLOAD SWAP4 DUP5 PUSH2 0x1A9 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272 JUMP JUMPDEST POP MLOAD PUSH1 0xE8 SWAP1 DUP2 PUSH2 0x321 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x191 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x191 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1F8 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A5 JUMPI DUP1 MLOAD PUSH2 0x21E DUP2 PUSH2 0x1CC JUMP JUMPDEST SWAP3 PUSH2 0x22C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1A9 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x1A5 JUMPI PUSH2 0x24A SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x266 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x2E8 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x285 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0x6BF5ED59DE0E19999D264746843FF931C0133090 EXTCODESIZE ISZERO PUSH2 0x2A3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2F8 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x31C SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x24D JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC3 0xC5 LOG3 0x24 0xBD 0xB9 0x27 MSIZE PUSH3 0xF946B3 SWAP10 SELFDESTRUCT SLT DUP16 SELFBALANCE SWAP9 GASLIMIT DUP16 0xAB MLOAD DUP6 EXTCODECOPY DUP10 PUSH29 0xD3F17022F064736F6C6343000818003300000000000000000000000000 ", "sourceMap": "178:1175:1:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;178:1175:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;951:66;178:1175;;;;;:::i;:::-;444:42;594:66;444:42;951:66;;;178:1175;951:66;;;;;;;;;;;178:1175;;594:66;;;951;178:1175;594:66;;;;;;;;;;;;951;;;;;;:::i;:::-;;;;-1:-1:-1;;951:66:1;;;;;;;:::i;:::-;594;;;;;;;;;:::i;:::-;178:1175;;;;;;;;;;;;;;;7102:69:3;178:1175:1;-1:-1:-1;178:1175:1;;;;;;;;;;;;;-1:-1:-1;;;178:1175:1;;;;7060:25:3;;;;178:1175:1;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;178:1175:1;;;;7102:69:3;:::i;:::-;;178:1175:1;;;;;;;;;;;7102:69:3;:::i;178:1175:1:-;;;;;;;;;594:66;178:1175;;;-1:-1:-1;178:1175:1;;;;;;;-1:-1:-1;;178:1175:1;;;;-1:-1:-1;;;;;178:1175:1;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;178:1175:1;;;;;;-1:-1:-1;;178:1175:1;;;;:::o;:::-;;;;;;;;-1:-1:-1;;178:1175:1;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;951:66::-;;;;;;;;;;;;;;;;;;;:::i;:::-;178:1175;;-1:-1:-1;;178:1175:1;951:66;;;:::o;7466:628:3:-;;;;7670:418;;;951:66:1;;;7701:22:3;7697:286;;7996:17;:::o;7697:286::-;444:42:1;1465:19:3;:23;178:1175:1;;7996:17:3;:::o;178:1175:1:-;;;-1:-1:-1;;;178:1175:1;;;;;;;;;;;951:66;178:1175;951:66;;;178:1175;;;;7670:418:3;951:66:1;;8775:21:3;:17;;8947:142;;;;;;;8771:379;178:1175:1;;-1:-1:-1;;;9119:20:3;;178:1175:1;9119:20:3;;;178:1175:1;;;;;;;;;;;:::i;:::-;9119:20:3;;"}, "deployedBytecode": {"functionDebugData": {"fun_fallback": {"entryPoint": 106, "id": 123, "parameterSlots": 0, "returnSlots": 0}}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "608060405260043610156015575b36606a57606a565b5f3560e01c635c60da1b03600d57346066575f3660031901126066577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166080908152602090f35b5f80fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e1560ae573d5ff35b3d5ffdfea2646970667358221220abc3c5a324bdb9275962f946b399ff128f4798458fab51853c897cd3f17022f064736f6c63430008180033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x15 JUMPI JUMPDEST CALLDATASIZE PUSH1 0x6A JUMPI PUSH1 0x6A JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5C60DA1B SUB PUSH1 0xD JUMPI CALLVALUE PUSH1 0x66 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x66 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH1 0xAE JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC3 0xC5 LOG3 0x24 0xBD 0xB9 0x27 MSIZE PUSH3 0xF946B3 SWAP10 SELFDESTRUCT SLT DUP16 SELFBALANCE SWAP9 GASLIMIT DUP16 0xAB MLOAD DUP6 EXTCODECOPY DUP10 PUSH29 0xD3F17022F064736F6C6343000818003300000000000000000000000000 ", "sourceMap": "178:1175:1:-:0;;;;;;;;;-1:-1:-1;178:1175:1;2853:63:2;178:1175:1;2853:63:2;:::i;178:1175:1:-;;;;;;;;;;;;;;-1:-1:-1;;178:1175:1;;;;951:66;;-1:-1:-1;;;;;178:1175:1;;;;;;;;;;;;2322:110:2;951:66:1;;-1:-1:-1;;;;;;;;;178:1175:1;1018:819:2;-1:-1:-1;;1018:819:2;;;;;;;-1:-1:-1;1018:819:2;;;;;;-1:-1:-1;1018:819:2;;;-1:-1:-1;1018:819:2"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"}},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"02_05_ERC1155Creator.sol\":\"ERC1155Creator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"02_05_ERC1155Creator.sol\":{\"keccak256\":\"0x1cc474e69786465e4d5b633051de7fd7df888fc0a5dad0c7cc61801cb00af8eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721f1de392d5bdf9c461403a99ce04ba8480df0b353735a04b45ce9f1b1fa3cf\",\"dweb:/ipfs/QmSd3cU5yHNv4aRYfwJDWgT4TZKPA5uosbhuAzYQd4giUH\"]},\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]},\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]},\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "03_05_Proxy.sol": {"Proxy": {"abi": [{"stateMutability": "payable", "type": "fallback"}, {"stateMutability": "payable", "type": "receive"}], "devdoc": {"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"03_05_Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"03_05_Proxy.sol\":{\"keccak256\":\"0x2d4590ddfd911967dfb43fd40a17302cc65c953392bb5bd80ca5b117bcd743e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://435e3bd5f00ba68605ff720d89358f32783a5b4f0b7ebde2d35f2033f2c2d194\",\"dweb:/ipfs/QmbJsL2ctwbiJAvUZyTVGpn8395B9K1sjiusp5DGZE7W19\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "04_05_Address.sol": {"Address": {"abi": [], "devdoc": {"details": "Collection of functions related to the address type", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"04_05_Address.sol\":194:9158   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"04_05_Address.sol\":194:9158   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE3 BLOBBASEFEE 0x21 0xB5 DUP10 PUSH28 0x5E45C81596991DBA9DFA9A26F5299A3F5F7908CF7647FCB67A64736F PUSH13 0x63430008180033000000000000 ", "sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea264697066735822122094e34a21b5897b5e45c81596991dba9dfa9a26f5299a3f5f7908cf7647fcb67a64736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE3 BLOBBASEFEE 0x21 0xB5 DUP10 PUSH28 0x5E45C81596991DBA9DFA9A26F5299A3F5F7908CF7647FCB67A64736F PUSH13 0x63430008180033000000000000 ", "sourceMap": "194:8964:3:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04_05_Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"04_05_Address.sol\":{\"keccak256\":\"0x4fad4b52679f495fbde44858fd16ce5282941a7ddf075066f09036ddedd08062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce877dc61868a4e76a2794bc22e1e0f961a3f1b3dfca4c656c7d048eaab515b\",\"dweb:/ipfs/QmSqiRbicBDJMW8v4hVRix9nQiJJJuSBbKi1ri2MAHrTiX\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}, "05_05_StorageSlot.sol": {"StorageSlot": {"abi": [], "devdoc": {"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._", "kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"05_05_StorageSlot.sol\":1279:2670   */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"05_05_StorageSlot.sol\":1279:2670   */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033\n}\n", "bytecode": {"functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033", "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP10 PUSH27 0x841B4B8A84396F4DA1BA23D6310A42BBEEFB503EECCDDF65F70AAF 0xE1 GAS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "1279:1391:4:-:0;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "5f80fdfea26469706673582212202c897a841b4b8a84396f4da1ba23d6310a42bbeefb503eeccddf65f70aafe15a64736f6c63430008180033", "opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C DUP10 PUSH27 0x841B4B8A84396F4DA1BA23D6310A42BBEEFB503EECCDDF65F70AAF 0xE1 GAS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ", "sourceMap": "1279:1391:4:-:0;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"05_05_StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"05_05_StorageSlot.sol\":{\"keccak256\":\"0xcf26f014bf7e1fc3d02aedc00eb218479bea1754f8a058741e1764c7678ad3dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fa44fb4e85d5588f2cf67d527320014b35c40e205239c86d8c5739ac547f0e\",\"dweb:/ipfs/QmbhvU2u8DKnGPHMm6jAgJEtggqQ3zCw9dEw3KBtGXgFgR\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "sources": {"01_05_FTB.sol": {"id": 0}, "02_05_ERC1155Creator.sol": {"id": 1}, "03_05_Proxy.sol": {"id": 2}, "04_05_Address.sol": {"id": 3}, "05_05_StorageSlot.sol": {"id": 4}}}